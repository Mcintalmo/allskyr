update.showers()
source("import.R")
update.showers()
str_match_all(raw.data[2], "[0-9]{3}(?= [A-Z])")
str_match_all(raw.data[2], "[0-9]{3}(?= [A-Z])")[[1]]
raw.data[2]
source("import.R")
update.showers()
source("import.R")
update.showers()
source("import.R")
update.showers()
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
raw.data <- readLines(file)
names <- str_match(raw.data, ".*(?= \\()")
numbers <- str_match_all(raw.data, "[0-9]{3}(?= [A-Z])")
abbrevs <- str_match_all(raw.data, "[A-Z]{3}(?=\\))")
months <- str_match_all(raw.data, "[A-Z][a-z]{2}(?= )")
values <- str_extract_all(raw.data, "\\+*\\-*[0-9]+\\.*[0-9]*")
data <- sapply(1:length(raw.data), function(i, names, numbers, abbrevs, months, values, year){
month.number = c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
if(nchar(values[[i]][[1]]) > 2){
values[[i]] <- values[[i]][-1]
}
start.day <- values[[i]][[1]]
start.month <- month.number[months[[i]][[1]] == month.abb]
end.day <- values[[i]][[2]]
end.month <- month.number[months[[i]][[2]] == month.abb]
peak.day <- values[[i]][[3]]
peak.month <- month.number[months[[i]][[3]] == month.abb]
if((as.numeric(end.month) < as.numeric(start.month)) && (i < 3)){
start.year <- as.character(as.numeric(year) - 1)
end.year <- year
if(as.numeric(peak.month) >= as.numeric(start.month)){
peak.year <- start.year
}
else{
peak.year <- end.year
}
}
else if(as.numeric(end.month) < as.numeric(start.month)){
start.year <- year
end.year <- as.character(as.numeric(year) + 1)
if(as.numeric(peak.month) < as.numeric(start.month)){
peak.year <- end.year
}
else{
peak.year <- start.year
}
}
else {
start.year <- year
end.year <- year
peak.year <- year
}
start.date <- paste(start.year, start.month, start.day, sep = "")
end.date <- paste(end.year, end.month, end.day, sep = "")
peak.date <- paste(peak.year, peak.month, peak.day, sep = "")
gamma <- as.numeric(values[[i]][[4]])
theo.ra <- as.numeric(values[[i]][[5]])
theo.dec <- as.numeric(values[[i]][[6]])
v <- as.numeric(values[[i]][[7]])
r <- as.numeric(values[[i]][[8]])
if(length(values[[i]]) < 9){
zhr <- "Var"
}
else{
zhr <- values[[i]][[9]]
}
return(c(names[[i]], numbers[[i]], abbrevs[[i]], start.date, end.date, peak.date,
gamma, theo.ra, theo.dec, v, r, zhr))
}, names, numbers, abbrevs, months, values, year)
data <- as.data.frame(t(data), stringsAsFactors = FALSE)
names(data) <- c("name", "number", "abbrev", "start.date", "end.date", "peak.date",
"gamma", "theo.ra", "theo.dec", "v", "r", "zhr")
return(data)
}, year)
showers <- NULL
shower.data <- lapply(shower.file, function(file, year){
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
raw.data <- readLines(file)
names <- str_match(raw.data, ".*(?= \\()")
numbers <- str_match_all(raw.data, "[0-9]{3}(?= [A-Z])")
abbrevs <- str_match_all(raw.data, "[A-Z]{3}(?=\\))")
months <- str_match_all(raw.data, "[A-Z][a-z]{2}(?= )")
values <- str_extract_all(raw.data, "\\+*\\-*[0-9]+\\.*[0-9]*")
data <- sapply(1:length(raw.data), function(i, names, numbers, abbrevs, months, values, year){
month.number = c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
if(nchar(values[[i]][[1]]) > 2){
values[[i]] <- values[[i]][-1]
}
start.day <- values[[i]][[1]]
start.month <- month.number[months[[i]][[1]] == month.abb]
end.day <- values[[i]][[2]]
end.month <- month.number[months[[i]][[2]] == month.abb]
peak.day <- values[[i]][[3]]
peak.month <- month.number[months[[i]][[3]] == month.abb]
if((as.numeric(end.month) < as.numeric(start.month)) && (i < 3)){
start.year <- as.character(as.numeric(year) - 1)
end.year <- year
if(as.numeric(peak.month) >= as.numeric(start.month)){
peak.year <- start.year
}
else{
peak.year <- end.year
}
}
else if(as.numeric(end.month) < as.numeric(start.month)){
start.year <- year
end.year <- as.character(as.numeric(year) + 1)
if(as.numeric(peak.month) < as.numeric(start.month)){
peak.year <- end.year
}
else{
peak.year <- start.year
}
}
else {
start.year <- year
end.year <- year
peak.year <- year
}
start.date <- paste(start.year, start.month, start.day, sep = "")
end.date <- paste(end.year, end.month, end.day, sep = "")
peak.date <- paste(peak.year, peak.month, peak.day, sep = "")
gamma <- as.numeric(values[[i]][[4]])
theo.ra <- as.numeric(values[[i]][[5]])
theo.dec <- as.numeric(values[[i]][[6]])
v <- as.numeric(values[[i]][[7]])
r <- as.numeric(values[[i]][[8]])
if(length(values[[i]]) < 9){
zhr <- "Var"
}
else{
zhr <- values[[i]][[9]]
}
return(c(names[[i]], numbers[[i]], abbrevs[[i]], start.date, end.date, peak.date,
gamma, theo.ra, theo.dec, v, r, zhr))
}, names, numbers, abbrevs, months, values, year)
data <- as.data.frame(t(data), stringsAsFactors = FALSE)
names(data) <- c("name", "number", "abbrev", "start.date", "end.date", "peak.date",
"gamma", "theo.ra", "theo.dec", "v", "r", "zhr")
return(data)
}, year)
showers <- NULL
shower.file <- "./showers/showere_calendar_2010.txt"
shower.data <- lapply(shower.file, function(file, year){
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
raw.data <- readLines(file)
names <- str_match(raw.data, ".*(?= \\()")
numbers <- str_match_all(raw.data, "[0-9]{3}(?= [A-Z])")
abbrevs <- str_match_all(raw.data, "[A-Z]{3}(?=\\))")
months <- str_match_all(raw.data, "[A-Z][a-z]{2}(?= )")
values <- str_extract_all(raw.data, "\\+*\\-*[0-9]+\\.*[0-9]*")
data <- sapply(1:length(raw.data), function(i, names, numbers, abbrevs, months, values, year){
month.number = c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
if(nchar(values[[i]][[1]]) > 2){
values[[i]] <- values[[i]][-1]
}
start.day <- values[[i]][[1]]
start.month <- month.number[months[[i]][[1]] == month.abb]
end.day <- values[[i]][[2]]
end.month <- month.number[months[[i]][[2]] == month.abb]
peak.day <- values[[i]][[3]]
peak.month <- month.number[months[[i]][[3]] == month.abb]
if((as.numeric(end.month) < as.numeric(start.month)) && (i < 3)){
start.year <- as.character(as.numeric(year) - 1)
end.year <- year
if(as.numeric(peak.month) >= as.numeric(start.month)){
peak.year <- start.year
}
else{
peak.year <- end.year
}
}
else if(as.numeric(end.month) < as.numeric(start.month)){
start.year <- year
end.year <- as.character(as.numeric(year) + 1)
if(as.numeric(peak.month) < as.numeric(start.month)){
peak.year <- end.year
}
else{
peak.year <- start.year
}
}
else {
start.year <- year
end.year <- year
peak.year <- year
}
start.date <- paste(start.year, start.month, start.day, sep = "")
end.date <- paste(end.year, end.month, end.day, sep = "")
peak.date <- paste(peak.year, peak.month, peak.day, sep = "")
gamma <- as.numeric(values[[i]][[4]])
theo.ra <- as.numeric(values[[i]][[5]])
theo.dec <- as.numeric(values[[i]][[6]])
v <- as.numeric(values[[i]][[7]])
r <- as.numeric(values[[i]][[8]])
if(length(values[[i]]) < 9){
zhr <- "Var"
}
else{
zhr <- values[[i]][[9]]
}
return(c(names[[i]], numbers[[i]], abbrevs[[i]], start.date, end.date, peak.date,
gamma, theo.ra, theo.dec, v, r, zhr))
}, names, numbers, abbrevs, months, values, year)
data <- as.data.frame(t(data), stringsAsFactors = FALSE)
names(data) <- c("name", "number", "abbrev", "start.date", "end.date", "peak.date",
"gamma", "theo.ra", "theo.dec", "v", "r", "zhr")
return(data)
}, year)
showers <- NULL
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
year=NULL
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
shower.data <- lapply(shower.file, function(file, year){
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
raw.data <- readLines(file)
names <- str_match(raw.data, ".*(?= \\()")
numbers <- str_match_all(raw.data, "[0-9]{3}(?= [A-Z])")
abbrevs <- str_match_all(raw.data, "[A-Z]{3}(?=\\))")
months <- str_match_all(raw.data, "[A-Z][a-z]{2}(?= )")
values <- str_extract_all(raw.data, "\\+*\\-*[0-9]+\\.*[0-9]*")
data <- sapply(1:length(raw.data), function(i, names, numbers, abbrevs, months, values, year){
month.number = c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
if(nchar(values[[i]][[1]]) > 2){
values[[i]] <- values[[i]][-1]
}
start.day <- values[[i]][[1]]
start.month <- month.number[months[[i]][[1]] == month.abb]
end.day <- values[[i]][[2]]
end.month <- month.number[months[[i]][[2]] == month.abb]
peak.day <- values[[i]][[3]]
peak.month <- month.number[months[[i]][[3]] == month.abb]
if((as.numeric(end.month) < as.numeric(start.month)) && (i < 3)){
start.year <- as.character(as.numeric(year) - 1)
end.year <- year
if(as.numeric(peak.month) >= as.numeric(start.month)){
peak.year <- start.year
}
else{
peak.year <- end.year
}
}
else if(as.numeric(end.month) < as.numeric(start.month)){
start.year <- year
end.year <- as.character(as.numeric(year) + 1)
if(as.numeric(peak.month) < as.numeric(start.month)){
peak.year <- end.year
}
else{
peak.year <- start.year
}
}
else {
start.year <- year
end.year <- year
peak.year <- year
}
start.date <- paste(start.year, start.month, start.day, sep = "")
end.date <- paste(end.year, end.month, end.day, sep = "")
peak.date <- paste(peak.year, peak.month, peak.day, sep = "")
gamma <- as.numeric(values[[i]][[4]])
theo.ra <- as.numeric(values[[i]][[5]])
theo.dec <- as.numeric(values[[i]][[6]])
v <- as.numeric(values[[i]][[7]])
r <- as.numeric(values[[i]][[8]])
if(length(values[[i]]) < 9){
zhr <- "Var"
}
else{
zhr <- values[[i]][[9]]
}
return(c(names[[i]], numbers[[i]], abbrevs[[i]], start.date, end.date, peak.date,
gamma, theo.ra, theo.dec, v, r, zhr))
}, names, numbers, abbrevs, months, values, year)
data <- as.data.frame(t(data), stringsAsFactors = FALSE)
names(data) <- c("name", "number", "abbrev", "start.date", "end.date", "peak.date",
"gamma", "theo.ra", "theo.dec", "v", "r", "zhr")
return(data)
}, year)
shower.file <- "./showers/shower_calendar_2010.txt"
shower.data <- lapply(shower.file, function(file, year){
if(is.null(year)){
year <- str_extract(file, "(?<=\\_)[0-9]{4}")
}
raw.data <- readLines(file)
names <- str_match(raw.data, ".*(?= \\()")
numbers <- str_match_all(raw.data, "[0-9]{3}(?= [A-Z])")
abbrevs <- str_match_all(raw.data, "[A-Z]{3}(?=\\))")
months <- str_match_all(raw.data, "[A-Z][a-z]{2}(?= )")
values <- str_extract_all(raw.data, "\\+*\\-*[0-9]+\\.*[0-9]*")
data <- sapply(1:length(raw.data), function(i, names, numbers, abbrevs, months, values, year){
month.number = c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
if(nchar(values[[i]][[1]]) > 2){
values[[i]] <- values[[i]][-1]
}
start.day <- values[[i]][[1]]
start.month <- month.number[months[[i]][[1]] == month.abb]
end.day <- values[[i]][[2]]
end.month <- month.number[months[[i]][[2]] == month.abb]
peak.day <- values[[i]][[3]]
peak.month <- month.number[months[[i]][[3]] == month.abb]
if((as.numeric(end.month) < as.numeric(start.month)) && (i < 3)){
start.year <- as.character(as.numeric(year) - 1)
end.year <- year
if(as.numeric(peak.month) >= as.numeric(start.month)){
peak.year <- start.year
}
else{
peak.year <- end.year
}
}
else if(as.numeric(end.month) < as.numeric(start.month)){
start.year <- year
end.year <- as.character(as.numeric(year) + 1)
if(as.numeric(peak.month) < as.numeric(start.month)){
peak.year <- end.year
}
else{
peak.year <- start.year
}
}
else {
start.year <- year
end.year <- year
peak.year <- year
}
start.date <- paste(start.year, start.month, start.day, sep = "")
end.date <- paste(end.year, end.month, end.day, sep = "")
peak.date <- paste(peak.year, peak.month, peak.day, sep = "")
gamma <- as.numeric(values[[i]][[4]])
theo.ra <- as.numeric(values[[i]][[5]])
theo.dec <- as.numeric(values[[i]][[6]])
v <- as.numeric(values[[i]][[7]])
r <- as.numeric(values[[i]][[8]])
if(length(values[[i]]) < 9){
zhr <- "Var"
}
else{
zhr <- values[[i]][[9]]
}
return(c(names[[i]], numbers[[i]], abbrevs[[i]], start.date, end.date, peak.date,
gamma, theo.ra, theo.dec, v, r, zhr))
}, names, numbers, abbrevs, months, values, year)
data <- as.data.frame(t(data), stringsAsFactors = FALSE)
names(data) <- c("name", "number", "abbrev", "start.date", "end.date", "peak.date",
"gamma", "theo.ra", "theo.dec", "v", "r", "zhr")
return(data)
}, year)
shower.data
showers <- NULL
for(data.frame in shower.data){
showers <- rbind(showers, data.frame)
}
showers
source("import.R")
update.showers()
source("import.R")
update.showers()
source("import.R")
update.showers()
source("import.R")
update.showers()
source("import.R")
update.showers()
source("import.R")
update.showers()
source("import.R")
update.showers()
runApp()
source("shower.R")
find.shower()
find.shower("","","")
find.shower("","",showers)
find.shower("Quadrantids","2010",showers)
find.shower("Quadrantids",2010,showers)
showers
source("import.R")
update.showers()
source("import.R")
update.showers()
showers
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
update.showers()
showers <- load.showers()
showers
α
α()
update.showers()
showers <- load.showers()
showers
update.showers()
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
runApp()
source("import.R")
showers <- load.showers()
update.showers()
source("initiate.R")
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
runApp()
print("α")
print("κ")
print("δ")
print("ε")
print("<U+03B3>")
print(<U+03B3>)
print("π")
Quadrantids (010 QUA)
"Quadrantids (010 QUA)"
str_extract("Quadrantids (010 QUA)", "(?<=\\_)[0-9]{4}")
str_match("Quadrantids (010 QUA)", ".*(?= \\()")
runApp()
showeres
showers
find.shower("Quadrantids", 2010, showers)
runApp()
runApp()
runApp()
runApp()
source("import.R")
update.showers()
showers <- load.showers()
showers
x <- "α-Centaurids (102 ACE) Jan 28–Feb 21 Feb 08 319.2 210 -59 56 2.0 6"
x
x <- "γ-Ursae Minorids"
x
runApp()
runApp()
update.showers()
showers <- load.showers()
showers()
showers
source("import.R")
update.showers()
showers <- load.showers()
showers
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
