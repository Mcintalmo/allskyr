{
    "collab_server" : "",
    "contents" : "event <- setClass(\"event\",\n                  slots = c(name = \"character\", #Name of the event ev_YYYYMMDD_HHMMSSX0_1\n                            file = \"character\", #File the event was read from\n                            version = \"character\", #Version of ASGARD that created the event\n                            num_fr = \"integer\", #number of frames of the event\n                            date = \"POSIXlt\", #Date and time at which the event occured\n                            unix = \"numeric\", #unix time at which the event occured\n                            ntp = \"character\", #UNKNOWN\n                            seq0 = \"integer\", #seq value at time 0\n                            mul = \"character\", #UNKNOWN\n                            site = \"character\", #Site at which the event was recorded (numiercal value)\n                            latlon = \"numeric\", #c(latitude, longitude, elevation)\n                            text = \"character\", #site of the event (string value)\n                            plate = \"character\", #platefile used to correct for theta and phi\n                            geom = \"integer\", #UNKNOWN\n                            reject = \"logical\", #Whether or not the event should be rejected\n                            fr  = \"integer\", #frame number\n                            time = \"numeric\", #time offset\n                            sum  = \"integer\", #UNKNOWN\n                            seq  = \"integer\", #UNKNOWN\n                            cx   = \"numeric\", #x coordinate of the detected meteor pixel\n                            cy   = \"numeric\", #y coordinate of the detected meteor pixel\n                            th  = \"numeric\", #spherical conversion of the x,y coordinates using platefile\n                            phi  = \"numeric\", #spherical conversion of the x, y coordates using platefile\n                            lsp  = \"numeric\", #UNKNOWN\n                            mag  = \"numeric\", #Magnitude of the meteor\n                            flag = \"logical\"), #Flag that something isn't quite right\n                  \n                  prototype = list(name = character(),\n                                   file = character(),\n                                   version = character(),\n                                   num_fr = integer(),\n                                   date = strptime(\"00000101000000\", \n                                                   \"%Y%m%d%H%M%S\"),\n                                   unix = numeric(), \n                                   ntp = character(),\n                                   seq0 = integer(), \n                                   mul = character(),\n                                   site = character(),\n                                   latlon = numeric(),\n                                   text = character(),\n                                   plate = character(),\n                                   geom = integer(),\n                                   reject = logical(),\n                                   fr  = integer(),\n                                   time = numeric(),\n                                   sum  = integer(),\n                                   seq  = integer(),\n                                   cx   = numeric(),\n                                   cy   = numeric(),\n                                   th  = numeric(),\n                                   phi  = numeric(),\n                                   lsp  = numeric(),\n                                   mag  = numeric(),\n                                   flag = logical()\n                                   )\n                  )\n\nsetGeneric(\"event.name\", def = function(events){\n  standardGeneric(\"event.name\")\n})\n\nsetMethod(\"event.name\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@name)\n              }))\n            })\n\nsetMethod(\"event.name\", signature = \"event\", \n          definition = function(events){\n            return(events@name)\n          }\n)\n\nsetGeneric(\"event.file\", def = function(events){\n  standardGeneric(\"event.file\")\n})\n\nsetMethod(\"event.file\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@file)\n            }))\n          })\n\nsetMethod(\"event.file\", signature = \"event\", \n          definition = function(events){\n            return(events@file)\n          }\n)\n\nsetGeneric(\"event.version\", def = function(events){\n  standardGeneric(\"event.version\")\n})\n\nsetMethod(\"event.version\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@version)\n            }))\n          })\n\nsetMethod(\"event.version\", signature = \"event\", \n          definition = function(events){\n            return(events@version)\n          }\n)\n\nsetGeneric(\"event.num_fr\", def = function(events){\n  standardGeneric(\"event.num_fr\")\n})\n\nsetMethod(\"event.num_fr\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@num_fr)\n            }))\n          })\n\nsetMethod(\"event.num_fr\", signature = \"event\", \n          definition = function(events){\n            return(events@num_fr)\n          }\n)\n\nsetGeneric(\"event.date\", def = function(events){\n  standardGeneric(\"event.date\")\n})\n\nsetMethod(\"event.date\", signature = \"list\", \n          definition = function(events){\n            return(lapply(events, function(events){\n              return(events@date)\n            }))\n          })\n\nsetMethod(\"event.date\", signature = \"event\", \n          definition = function(events){\n            return(events@date)\n          }\n)\n\nsetGeneric(\"event.unix\", def = function(events){\n  standardGeneric(\"event.unix\")\n})\n\nsetMethod(\"event.unix\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@unix)\n            }))\n          })\n\nsetMethod(\"event.unix\", signature = \"event\", \n          definition = function(events){\n            return(events@unix)\n          }\n)\n\nsetGeneric(\"event.ntp\", def = function(events){\n  standardGeneric(\"event.ntp\")\n})\n\nsetMethod(\"event.ntp\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@ntp)\n            }))\n          })\n\nsetMethod(\"event.ntp\", signature = \"event\", \n          definition = function(events){\n            return(events@ntp)\n          }\n)\n\nsetGeneric(\"event.seq0\", def = function(events){\n  standardGeneric(\"event.seq0\")\n})\n\nsetMethod(\"event.seq0\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@seq0)\n            }))\n          })\n\nsetMethod(\"event.seq0\", signature = \"event\", \n          definition = function(events){\n            return(events@seq0)\n          }\n)\n\nsetGeneric(\"event.mul\", def = function(events){\n  standardGeneric(\"event.mul\")\n})\n\nsetMethod(\"event.mul\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@mul)\n            }))\n          })\n\nsetMethod(\"event.mul\", signature = \"event\", \n          definition = function(events){\n            return(events@mul)\n          }\n)\n\nsetGeneric(\"event.site\", def = function(events){\n  standardGeneric(\"event.site\")\n})\n\nsetMethod(\"event.site\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@site)\n            }))\n          })\n\nsetMethod(\"event.site\", signature = \"event\", \n          definition = function(events){\n            return(events@site)\n          }\n)\n\nsetGeneric(\"event.latlon\", def = function(events){\n  standardGeneric(\"event.latlon\")\n})\n\nsetMethod(\"event.latlon\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@latlon)\n            }))\n          })\n\nsetMethod(\"event.latlon\", signature = \"event\", \n          definition = function(events){\n            return(events@latlon)\n          }\n)\n\nsetGeneric(\"event.text\", def = function(events){\n  standardGeneric(\"event.text\")\n})\n\nsetMethod(\"event.text\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@text)\n            }))\n          })\n\nsetMethod(\"event.text\", signature = \"event\", \n          definition = function(events){\n            return(events@text)\n          }\n)\n\nsetGeneric(\"event.plate\", def = function(events){\n  standardGeneric(\"event.plate\")\n})\n\nsetMethod(\"event.plate\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@plate)\n            }))\n          })\n\nsetMethod(\"event.plate\", signature = \"event\", \n          definition = function(events){\n            return(events@plate)\n          }\n)\n\nsetGeneric(\"event.geom\", def = function(events){\n  standardGeneric(\"event.geom\")\n})\n\nsetMethod(\"event.geom\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@geom)\n            }))\n          })\n\nsetMethod(\"event.geom\", signature = \"event\", \n          definition = function(events){\n            return(events@geom)\n          }\n)\n\nsetGeneric(\"event.reject\", def = function(events){\n  standardGeneric(\"event.reject\")\n})\n\nsetMethod(\"event.reject\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@reject)\n            }))\n          })\n\nsetMethod(\"event.reject\", signature = \"event\", \n          definition = function(events){\n            return(events@reject)\n          }\n)\n\nsetGeneric(\"event.fr\", def = function(events){\n  standardGeneric(\"event.fr\")\n})\n\nsetMethod(\"event.fr\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@fr)\n            }))\n          })\n\nsetMethod(\"event.fr\", signature = \"event\", \n          definition = function(events){\n            return(events@fr)\n          }\n)\n\nsetGeneric(\"event.time\", def = function(events){\n  standardGeneric(\"event.time\")\n})\n\nsetMethod(\"event.time\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@time)\n            }))\n          })\n\nsetMethod(\"event.time\", signature = \"event\", \n          definition = function(events){\n            return(events@time)\n          }\n)\n\nsetGeneric(\"event.sum\", def = function(events){\n  standardGeneric(\"event.sum\")\n})\n\nsetMethod(\"event.sum\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@sum)\n            }))\n          })\n\nsetMethod(\"event.sum\", signature = \"event\", \n          definition = function(events){\n            return(events@sum)\n          }\n)\n\nsetGeneric(\"event.seq\", def = function(events){\n  standardGeneric(\"event.seq\")\n})\n\nsetMethod(\"event.seq\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@seq)\n            }))\n          })\n\nsetMethod(\"event.seq\", signature = \"event\", \n          definition = function(events){\n            return(events@seq)\n          }\n)\n\nsetGeneric(\"event.cx\", def = function(events){\n  standardGeneric(\"event.cx\")\n})\n\nsetMethod(\"event.cx\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@cx)\n            }))\n          })\n\nsetMethod(\"event.cx\", signature = \"event\", \n          definition = function(events){\n            return(events@cx)\n          }\n)\n\nsetGeneric(\"event.cy\", def = function(events){\n  standardGeneric(\"event.cy\")\n})\n\nsetMethod(\"event.cy\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@cy)\n            }))\n          })\n\nsetMethod(\"event.cy\", signature = \"event\", \n          definition = function(events){\n            return(events@cy)\n          }\n)\n   \nsetGeneric(\"event.th\", def = function(events){\n  standardGeneric(\"event.th\")\n})\n\nsetMethod(\"event.th\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@th)\n            }))\n          })\n\nsetMethod(\"event.th\", signature = \"event\", \n          definition = function(events){\n            return(events@th)\n          }\n)\n\nsetGeneric(\"event.phi\", def = function(events){\n  standardGeneric(\"event.phi\")\n})\n\nsetMethod(\"event.phi\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@phi)\n            }))\n          })\n\nsetMethod(\"event.phi\", signature = \"event\", \n          definition = function(events){\n            return(events@phi)\n          }\n)\nsetGeneric(\"event.lsp\", def = function(events){\n  standardGeneric(\"event.lsp\")\n})\n\nsetMethod(\"event.lsp\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@lsp)\n            }))\n          })\n\nsetMethod(\"event.lsp\", signature = \"event\", \n          definition = function(events){\n            return(events@lsp)\n          }\n)\n\nsetGeneric(\"event.mag\", def = function(events){\n  standardGeneric(\"event.mag\")\n})\n\nsetMethod(\"event.mag\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@mag)\n            }))\n          })\n\nsetMethod(\"event.mag\", signature = \"event\", \n          definition = function(events){\n            return(events@mag)\n          }\n)\n\nsetGeneric(\"event.flag\", def = function(events){\n  standardGeneric(\"event.flag\")\n})\n\nsetMethod(\"event.flag\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(events@flag)\n            }))\n          })\n\nsetMethod(\"event.flag\", signature = \"event\", \n          definition = function(events){\n            return(events@flag)\n          }\n)\n\nsetGeneric(\"event.alt\", def = function(events){\n  standardGeneric(\"event.alt\")\n})\n\nsetMethod(\"event.alt\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(abs(90 - events@th))\n            }))\n          })\n\nsetMethod(\"event.alt\", signature = \"event\", \n          definition = function(events){\n            return(abs(90 - events@th))\n          }\n)\n\nsetGeneric(\"event.az\", def = function(events){\n  standardGeneric(\"event.az\")\n})\n\nsetMethod(\"event.az\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return((450 - events@phi) %% 360)\n            }))\n          })\n\nsetMethod(\"event.az\", signature = \"event\", \n          definition = function(events){\n            return((450 - events@phi) %% 360)\n          }\n)\n\nsetGeneric(\"event.julian.date\", def = function(events){\n  standardGeneric(\"event.julian.date\")\n})\n\nsetMethod(\"event.julian.date\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              julian.days <- julian(event.date(events), origin = as.POSIXct(\"01-01-01\", tz = \"UTC\"))\n              return(as.numeric(julian.days))\n            }))\n          })\n\nsetMethod(\"event.julian.date\", signature = \"event\", \n          definition = function(events){\n            julian.days <- julian(event.date(events), origin = as.POSIXct(\"01-01-01\", tz = \"UTC\"))\n            return(as.numeric(julian.days))\n          }\n)\n\nsetGeneric(\"event.ra\", def = function(events){\n  standardGeneric(\"event.ra\")\n})\n\nsetMethod(\"event.ra\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n              return(equatorial$ra)\n            }))\n          })\n\nsetMethod(\"event.ra\", signature = \"event\", \n          definition = function(events){\n            capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n            return(equatorial$ra)\n            }\n)\n\nsetGeneric(\"event.dec\", def = function(events){\n  standardGeneric(\"event.dec\")\n})\n\nsetMethod(\"event.dec\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n              return(equatorial$dec)\n            }))\n          })\n\nsetMethod(\"event.dec\", signature = \"event\", \n          definition = function(events){\n            capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n            return(equatorial$dec)\n          }\n)\n\nsetGeneric(\"event.ha\", def = function(events){\n  standardGeneric(\"event.ha\")\n})\n\nsetMethod(\"event.ha\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n              return(equatorial$ha)\n            }))\n          })\n\nsetMethod(\"event.ha\", signature = \"event\", \n          definition = function(events){\n            capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n            return(equatorial$ha)\n          }\n)\n\nsetGeneric(\"event.equatorial\", def = function(events){\n  standardGeneric(\"event.equatorial\")\n})\n\nsetMethod(\"event.equatorial\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n              return(equatorial)\n            }))\n          })\n\nsetMethod(\"event.equatorial\", signature = \"event\", \n          definition = function(events){\n            capture.output(equatorial <- hor2eq(event.alt(events), event.az(events), event.julian.date(events), lat = event.latlon(events)[1], lon = event.latlon(events)[2], altitude = event.latlon(events)[3]), file = 'NUL')\n            return(equatorial)\n          }\n)\n\nsetGeneric(\"event.start.equatorial\", def = function(events){\n  standardGeneric(\"event.start.equatorial\")\n})\n\nsetMethod(\"event.start.equatorial\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              latlon <- events@latlon\n              alt <- abs(90 - events@th[[1]])\n              az <- (90 - events@phi[[1]]) %% 360\n              capture.output(equatorial <- hor2eq(alt, az, event.julian.date(events), lat = latlon[[1]], lon = latlon[[2]], altitude = latlon[[3]]), file = 'NUL')\n              return(equatorial)\n            }))\n          })\n\nsetMethod(\"event.start.equatorial\", signature = \"event\", \n          definition = function(events){\n            latlon <- events@latlon\n            alt <- abs(90 - events@th[[1]])\n            az <- (90 - events@phi[[1]]) %% 360\n            capture.output(equatorial <- hor2eq(alt, az, event.julian.date(events), lat = latlon[[1]], lon = latlon[[2]], altitude = latlon[[3]]), file = 'NUL')\n            return(equatorial)\n          }\n)\n\nsetGeneric(\"event.end.equatorial\", def = function(events){\n  standardGeneric(\"event.end.equatorial\")\n})\n\nsetMethod(\"event.end.equatorial\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              latlon <- events@latlon\n              end <- events@num_fr\n              alt <- abs(90 - events@th[[end]])\n              az <- (90 - events@phi[[end]]) %% 360\n              capture.output(equatorial <- hor2eq(alt, az, event.julian.date(events), lat = latlon[[1]], lon = latlon[[2]], altitude = latlon[[3]]), file = 'NUL')\n              return(equatorial)\n            }))\n          })\n\nsetMethod(\"event.end.equatorial\", signature = \"event\", \n          definition = function(events){\n            latlon <- events@latlon\n            end <- events@num_fr\n            alt <- abs(90 - events@th[[end]])\n            az <- (90 - events@phi[[end]]) %% 360\n            capture.output(equatorial <- hor2eq(alt, az, event.julian.date(events), lat = latlon[[1]], lon = latlon[[2]], altitude = latlon[[3]]), file = 'NUL')\n            return(equatorial)\n          }\n)\n\nsetGeneric(\"event.year\", def = function(events){\n  standardGeneric(\"event.year\")\n})\n\nsetMethod(\"event.year\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%Y\"))\n            }))\n          })\n\nsetMethod(\"event.year\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%Y\"))\n          }\n)\n\nsetGeneric(\"event.month\", def = function(events){\n  standardGeneric(\"event.month\")\n})\n\nsetMethod(\"event.month\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%m\"))\n            }))\n          })\n\nsetMethod(\"event.month\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%m\"))\n          }\n)\n\nsetGeneric(\"event.day\", def = function(events){\n  standardGeneric(\"event.day\")\n})\n\nsetMethod(\"event.day\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%d\"))\n            }))\n          })\n\nsetMethod(\"event.day\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%d\"))\n          }\n)\n\nsetGeneric(\"event.hour\", def = function(events){\n  standardGeneric(\"event.hour\")\n})\n\nsetMethod(\"event.hour\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%H\"))\n            }))\n          })\n\nsetMethod(\"event.hour\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%H\"))\n          }\n)\n\nsetGeneric(\"event.minute\", def = function(events){\n  standardGeneric(\"event.minute\")\n})\n\nsetMethod(\"event.minute\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%M\"))\n            }))\n          })\n\nsetMethod(\"event.minute\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%M\"))\n          }\n)\n\nsetGeneric(\"event.second\", def = function(events){\n  standardGeneric(\"event.second\")\n})\n\nsetMethod(\"event.second\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%S\"))\n            }))\n          })\n\nsetMethod(\"event.second\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%S\"))\n          }\n)\n\nsetGeneric(\"event.calendar.date\", def = function(events){\n  standardGeneric(\"event.calendar.date\")\n})\n\nsetMethod(\"event.calendar.date\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%Y%m%d\"))\n            }))\n          })\n\nsetMethod(\"event.calendar.date\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%Y%m%d\"))\n          }\n)\n\nsetGeneric(\"event.clock.time\", def = function(events){\n  standardGeneric(\"event.clock.time\")\n})\n\nsetMethod(\"event.clock.time\", signature = \"list\", \n          definition = function(events){\n            return(sapply(events, function(events){\n              return(strftime(events@date, \"%H%M%S\"))\n            }))\n          })\n\nsetMethod(\"event.clock.time\", signature = \"event\", \n          definition = function(events){\n            return(strftime(events@date, \"%H%M%S\"))\n          }\n)\n\nsetGeneric(\"event.get\", def = function(events, name){\n  standardGeneric(\"event.get\")\n})\n\nsetMethod(\"event.get\", signature = c(\"list\", \"character\"), \n          definition = function(events, name){\n            return(sapply(events, function(events){\n              return(slot(events, name))\n            }))\n          })\n\nsetMethod(\"event.get\", signature = c(\"event\", \"character\"), \n          definition = function(events, name){\n            return(slot(events, name))\n          }\n)",
    "created" : 1511916305666.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3685350466",
    "id" : "C02943E9",
    "lastKnownWriteTime" : 1512163955,
    "last_content_update" : 1512163955603,
    "path" : "E:/Alex/Documents/GitHub/allskyr/event.R",
    "project_path" : "event.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}